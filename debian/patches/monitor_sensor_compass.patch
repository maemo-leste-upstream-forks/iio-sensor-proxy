diff --git a/src/monitor-sensor.c b/src/monitor-sensor.c
index aa62ea5..315b4b5 100644
--- a/src/monitor-sensor.c
+++ b/src/monitor-sensor.c
@@ -169,18 +169,16 @@ appeared_cb (GDBusConnection *connection,
 	g_signal_connect (G_OBJECT (iio_proxy), "g-properties-changed",
 			  G_CALLBACK (properties_changed), NULL);
 
-	if (g_strcmp0 (g_get_user_name (), "geoclue") == 0) {
-		iio_proxy_compass = g_dbus_proxy_new_for_bus_sync (G_BUS_TYPE_SYSTEM,
-								   G_DBUS_PROXY_FLAGS_NONE,
-								   NULL,
-								   "net.hadess.SensorProxy",
-								   "/net/hadess/SensorProxy/Compass",
-								   "net.hadess.SensorProxy.Compass",
-								   NULL, NULL);
+	iio_proxy_compass = g_dbus_proxy_new_for_bus_sync (G_BUS_TYPE_SYSTEM,
+								G_DBUS_PROXY_FLAGS_NONE,
+								NULL,
+								"net.hadess.SensorProxy",
+								"/net/hadess/SensorProxy/Compass",
+								"net.hadess.SensorProxy.Compass",
+								NULL, NULL);
 
 		g_signal_connect (G_OBJECT (iio_proxy_compass), "g-properties-changed",
 				  G_CALLBACK (properties_changed), NULL);
-	}
 
 	/* Accelerometer */
 	ret = g_dbus_proxy_call_sync (iio_proxy,
@@ -228,21 +226,19 @@ appeared_cb (GDBusConnection *connection,
 	g_clear_pointer (&ret, g_variant_unref);
 
 	/* Compass */
-	if (g_strcmp0 (g_get_user_name (), "geoclue") == 0) {
-		ret = g_dbus_proxy_call_sync (iio_proxy_compass,
-					     "ClaimCompass",
-					     NULL,
-					     G_DBUS_CALL_FLAGS_NONE,
-					     -1,
-					     NULL, &error);
-		if (!ret) {
-			if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
-				g_warning ("Failed to claim light sensor: %s", error->message);
-			g_main_loop_quit (loop);
-			return;
-		}
-		g_clear_pointer (&ret, g_variant_unref);
+	ret = g_dbus_proxy_call_sync (iio_proxy_compass,
+						"ClaimCompass",
+						NULL,
+						G_DBUS_CALL_FLAGS_NONE,
+						-1,
+						NULL, &error);
+	if (!ret) {
+		if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
+			g_warning ("Failed to claim light sensor: %s", error->message);
+		g_main_loop_quit (loop);
+		return;
 	}
+	g_clear_pointer (&ret, g_variant_unref);
 
 	print_initial_values ();
 }
